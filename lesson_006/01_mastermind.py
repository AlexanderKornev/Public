# -*- coding: utf-8 -*-

# Игра «Быки и коровы»
# https://goo.gl/Go2mb9
#
# Правила:
# Компьютер загадывает четырехзначное число, все цифры которого различны
# (первая цифра числа отлична от нуля). Игроку необходимо разгадать задуманное число.
# Игрок вводит четырехзначное число c неповторяющимися цифрами,
# компьютер сообщают о количестве «быков» и «коров» в названном числе
# «бык» — цифра есть в записи задуманного числа и стоит в той же позиции,
#       что и в задуманном числе
# «корова» — цифра есть в записи задуманного числа, но не стоит в той же позиции,
#       что и в задуманном числе
#
# Например, если задумано число 3275 и названо число 1234,
# получаем в названном числе одного «быка» и одну «корову».
# Очевидно, что число отгадано в том случае, если имеем 4 «быка».
#
# Формат ответа компьютера
# > быки - 1, коровы - 1


# Составить отдельный модуль mastermind_engine, реализующий функциональность игры.
# В mastermind_engine нужно реализовать функции:
#   загадать_число()
#   проверить_число(NN) - возвращает словарь {'bulls': N, 'cows': N}
# Загаданное число хранить в глобальной переменной.
# Обратите внимание, что строки - это список символов.
#
# В текущем модуле (lesson_006/01_mastermind.py) реализовать логику работы с пользователем:
#   модуль движка загадывает число
#   в цикле, пока число не отгадано
#       у пользователя запрашивается вариант числа
#       проверяем что пользователь ввел допустимое число (4 цифры, все цифры разные, не начинается с 0)
#       модуль движка проверяет число и выдает быков/коров
#       результат быков/коров выводится на консоль
#  когда игрок угадал таки число - показать количество ходов и вопрос "Хотите еще партию?"
#
# При написании кода учитывайте, что движок игры никак не должен взаимодействовать с пользователем.
# Все общение с пользователем (вывод на консоль и запрос ввода от пользователя) делать в 01_mastermind.py.
# Движок игры реализует только саму функциональность игры. Разделяем: mastermind_engine работает
# только с загаданным числом, а 01_mastermind - с пользователем и просто передает числа на проверку движку.
# Это пример применения SOLID принципа (см https://goo.gl/GFMoaI) в архитектуре программ.
# Точнее, в этом случае важен принцип единственной ответственности - https://goo.gl/rYb3hT

from lesson_006.mastermind_engine import guess_the_number, check_the_number, number_list

guess_the_number()
count_step = 0
print(guess_the_number())
while True:
    print('PC загадал число четырехзначное число, в котором ни одна цифра не повторяет другую, '
                       'а первая не равна нулю, например "1234". Угадайте его!')
    user_input = input('Введите число : ')
    if len(user_input) != 4:
        print('Вы ввели число не из четырех символов или вообще не число!')
        continue
    if len(user_input) == 4:
        ok = 0
        user_number_list = []
        for value in range(4) :
            user_number_list += [int(str(user_input)[value])]
        # for position, number in enumerate(user_number_list) :
        #     if user_number_list[0] == 0 or number in user_number_list[position+1:]:
        #         print('Вы ввели неверное число! Число не должно начинаться с нуля или содержать повторяющиеся цифры. '
        #               'Вы ошиблись, когда вводили:', number)
        #         break
        if user_number_list[0] == 0 or len(user_number_list) != len(set(user_number_list)):
            print('Вы ввели неверное число! Число не должно начинаться с нуля или содержать повторяющиеся цифры.')
        else:
            ok = 1
            count_step = count_step + 1
    if ok == 1 :
        result = check_the_number(number_list=number_list, user_number=user_number_list)
        print(result)
        if result['bulls'] < 4 :
            continue
        if result['bulls'] == 4 :
            print('Вы выиграли за ', count_step, 'шагов. Поздравляем!')
            user_input_1 = input('Хотите еще партию? "да" или "нет": ')
            if user_input_1 == 'да' :
                number_list = []
                guess_the_number()
                print(guess_the_number())
                continue
            elif user_input_1 == 'нет' :
                print('Дотвиданья!')
        break









